We introduced graph coloring and applications in previous post. As discussed in the previous post, graph coloring is widely used. Unfortunately, there is no efficient algorithm available for coloring a graph with minimum number of colors as the problem is a known NP Complete problem. There are approximate algorithms to solve the problem though. Following is the basic Greedy Algorithm to assign colors. It doesn’t guarantee to use minimum colors, but it guarantees an upper bound on the number of colors. The basic algorithm never uses more than d+1 colors where d is the maximum degree of a vertex in the given graph.Basic Greedy Coloring Algorithm:Following is C++ implementation of the above Greedy Algorithm.Output:Time Complexity: O(V^2 + E) in worst case.Analysis of Basic Algorithm
The above algorithm doesn’t always use minimum number of colors. Also, the number of colors used sometime depend on the order in which vertices are processed. For example, consider the following two graphs. Note that in graph on right side, vertices 3 and 4 are swapped.  If we consider the vertices 0, 1, 2, 3, 4 in left graph, we can color the graph using 3 colors. But if we consider the vertices 0, 1, 2, 3, 4 in right graph, we need 4 colors.     
So the order in which the vertices are picked is important.  Many people have suggested different ways to find an ordering that work better than the basic algorithm on average. The most common is Welsh–Powell Algorithm which considers vertices in descending order of degrees.  How does the basic algorithm guarantee an upper bound of d+1?
Here d is the maximum degree in the given graph.  Since d is maximum degree, a vertex cannot be attached to more than d vertices.  When we color a vertex, at most d colors could have already been used by its adjacent.  To color this vertex, we need to pick the smallest numbered color that is not used by the adjacent vertices.  If colors are numbered like 1, 2, …., then the value of such smallest number must be between 1 to d+1 (Note that d numbers are already picked by adjacent vertices).
This can also be proved using induction. See this video lecture for proof. We will soon be discussing some interesting facts about chromatic number and graph coloring.Please write comments if you find anything incorrect, or you want to share more information about the topic discussed aboveTags: Graph, Greedy Algorithm