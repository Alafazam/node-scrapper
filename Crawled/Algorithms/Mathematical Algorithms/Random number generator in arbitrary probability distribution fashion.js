Given a number, check if it is divisible by 7. You are not allowed to use modulo operator, floating point arithmetic is also not allowed. A simple method is repeated subtraction. Following is another interesting method.Divisibility by 7 can be checked by a recursive method. A number of the form 10a + b is divisible by 7 if and only if a – 2b is divisible by 7. In other words, subtract twice the last digit from the number formed by the remaining digits. Continue to do this until a small number.  Example: the number 371: 37 – (2×1) = 37 – 2 = 35; 3 – (2 × 5) = 3 – 10 = -7; thus, since -7 is divisible by 7, 371 is divisible by 7. Following is C implementation of the above methodOutput:
Divisible
How does this work? Let ‘b’ be the last digit of a number ‘n’ and let ‘a’ be the number we get when we split off ‘b’.
The representation of the number may also be multiplied by any number relatively prime to the divisor without changing its divisibility. After observing that 7 divides 21, we can perform the following:
 10.a + b 
after multiplying by 2, this becomesand thenEliminating the multiple of 21 givesand multiplying by -1 givesThere are other interesting methods to check divisibility by 7 and other numbers. See following Wiki page for details.References:
http://en.wikipedia.org/wiki/Divisibility_rulePlease write comments if you find anything incorrect, or you want to share more information about the topic discussed above.Tags: MathematicalAlgo