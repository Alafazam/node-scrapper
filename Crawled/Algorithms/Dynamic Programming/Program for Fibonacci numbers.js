Following are common definition of Binomial Coefficients.
1) A binomial coefficient C(n, k) can be defined as the coefficient of X^k in the expansion of (1 + X)^n.  2) A binomial coefficient C(n, k) also gives the number of ways, disregarding order, that k objects can be chosen from among n objects; more formally, the number of k-element subsets (or k-combinations) of an n-element set.The Problem
Write a function that takes two parameters n and k and returns the value of Binomial Coefficient C(n, k).  For example, your function should return 6 for n = 4 and k = 2, and it should return 10 for n = 5 and k = 2.1) Optimal Substructure
The value of C(n, k) can recursively calculated using following standard formula for Binomial Cofficients.2) Overlapping Subproblems
Following is simple recursive implementation that simply follows the recursive structure mentioned above.It should be noted that the above function computes the same subproblems again and again. See the following recursion tree for n = 5 an k = 2.  The function C(3, 1) is called two times. For large values of n, there will be many common subproblems.Since same suproblems are called again, this problem has Overlapping Subprolems property. So the Binomial Coefficient problem has both properties (see this and this) of a dynamic programming problem. Like other typical Dynamic Programming(DP) problems, recomputations of same subproblems can be avoided by constructing a temporary array C[][] in bottom up manner. Following is Dynamic Programming based implementation.Time Complexity: O(n*k)
Auxiliary Space: O(n*k)Following is a space optimized version of the above code.  The following code only uses O(k). Thanks to AK for suggesting this method.Time Complexity: O(n*k)
Auxiliary Space: O(k)References:
http://www.csl.mtu.edu/cs4321/www/Lectures/Lecture%2015%20-%20Dynamic%20Programming%20Binomial%20Coefficients.htmPlease write comments if you find anything incorrect, or you want to share more information about the topic discussed above.Tags: Dynamic Programming