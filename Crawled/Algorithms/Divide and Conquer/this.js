We have discussed Backtracking and Knightâ€™s tour problem in Set 1.  Let us discuss Rat in a Maze as another example problem that can be solved using Backtracking.A Maze is given as N*N binary matrix of blocks where source block is the upper left most block i.e., maze[0][0] and destination block is lower rightmost block i.e., maze[N-1][N-1].  A rat starts from source and has to reach destination. The rat can move only in two directions: forward and down.
In the maze matrix, 0 means the block is dead end and 1 means the block can be used in the path from source to destination. Note that this is a simple version of the typical Maze problem. For example, a more complex version can be that the rat can move in 4 directions and a more complex version can be with limited number of moves.Following is an example maze.Following is binary matrix representation of the above maze.Following is maze with highlighted solution path.Following is the solution matrix (output of program) for the above input matrx.Naive Algorithm
The Naive Algorithm is to generate all paths from source to destination and one by one check if the generated path satisfies the constraints.Backtrackng AlgorithmImplementation of Backtracking solutionPlease write comments if you find anything incorrect, or you want to share more information about the topic discussed above.Tags: Backtracking