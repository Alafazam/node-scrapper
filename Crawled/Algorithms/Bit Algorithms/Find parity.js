Asked by Ajay1. A simple method is to take log of the given number on base 4, and if we get an integer then number is power of 4. 2. Another solution is to keep dividing the number by 4, i.e, do n = n/4 iteratively. In any iteration, if n%4 becomes non-zero and n is not 1 then n is not a power of 4, otherwise n is a power of 4.3. A number n is a power of 4 if following conditions are met.
a) There is only one bit set in the binary representation of n (or n is a power of 2)
b) The count of zero bits before the (only) set bit is even.For example: 16 (10000) is power of 4 because there is only one bit set and count of 0s before the set bit is 4 which is even.Thanks to Geek4u for suggesting the approach and providing the code.Please write comments if you find any of the above codes/algorithms incorrect, or find other ways to solve the same problem.