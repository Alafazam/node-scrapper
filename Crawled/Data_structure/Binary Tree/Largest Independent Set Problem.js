Given a Binary Tree, find the maximum sum path from a leaf to root. For example, in the following tree, there are three leaf to root paths 8->-2->10,  -4->-2->10 and 7->10. The sums of these three paths are 16, 4 and 17 respectively.  The maximum of them is 17 and the path for maximum is 7->10. Solution
1) First find the leaf node that is on the maximum sum path. In the following code getTargetLeaf() does this by assigning the result to *target_leaf_ref.
2) Once we have the target leaf node, we can print the maximum sum path by traversing the tree.  In the following code, printPath() does this.The main function is maxSumPath() that uses above two functions to get the complete solution. Output:Time Complexity: Time complexity of the above solution is O(n) as it involves tree traversal two times.Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.