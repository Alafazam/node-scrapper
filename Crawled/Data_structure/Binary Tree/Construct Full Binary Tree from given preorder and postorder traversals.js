Given two binary trees, check if the first tree is subtree of the second one.  A subtree of a tree T is a tree S consisting of a node in T and all of its descendants in T. The subtree corresponding to the root node is the entire tree; the subtree corresponding to any other node is called a proper subtree.For example, in the following case, tree S is a subtree of tree T.Solution:  Traverse the tree T in preorder fashion.  For every visited node in the traversal, see if the subtree rooted with this node is identical to S.  Following is C implementation for this.Output:

Tree S is subtree of tree T 
Time Complexity: Time worst case complexity of above solution is O(mn) where m and n are number of nodes in given two trees. We can solve the above problem in O(n) time.  Please refer Check if a binary tree is subtree of another binary tree | Set 2 for O(n) solution.Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.