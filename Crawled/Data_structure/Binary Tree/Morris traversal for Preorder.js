Write a function to connect all the adjacent nodes at the same level in a binary tree. Structure of the given Binary Tree node is like following.Initially, all the nextRight pointers point to garbage values. Your function should set these pointers to point next right for each node. You can use only constant extra space.ExampleWe discussed two different approaches to do it in the previous post. The auxiliary space required in both of those approaches is not constant.  Also, the method 2 discussed there only works for complete Binary Tree.  In this post, we will first modify the method 2 to make it work for all kind of trees.  After that, we will remove recursion from this method so that the extra space becomes constant.A Recursive Solution
In the method 2 of previous post, we traversed the nodes in pre order fashion.  Instead of traversing in Pre Order fashion (root, left, right), if we traverse the nextRight node before the left and right children (root, nextRight, left), then we can make sure that all nodes at level i have the nextRight set, before the level i+1 nodes.  Let us consider the following example (same example as previous post).  The method 2 fails for right child of node 4.  In this method, we make sure that all nodes at the 4â€™s level (level 2) have nextRight set, before we try to set the nextRight of 9.  So when we set the nextRight of 9, we search for a nonleaf node on right side of node 4 (getNextRight() does this for us).
An Iterative Solution 
The recursive approach discussed above can be easily converted to iterative.  In the iterative version, we use nested loop. The outer loop, goes through all the levels and the inner loop goes through all the nodes at every level.  This solution uses constant space.Output:Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.