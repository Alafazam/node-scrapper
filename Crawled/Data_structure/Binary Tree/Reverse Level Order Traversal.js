Given a Binary Tree, write a function to check whether the given Binary Tree is Complete Binary Tree or not.A complete binary tree is a binary tree in which every level, except possibly the last, is completely filled, and all nodes are as far left as possible.  See following examples.Source:  Write an algorithm to check if a tree is complete binary tree or notThe method 2 of level order traversal post can be easily modified to check whether a tree is Complete or not. To understand the approach, let us first define a term ‘Full Node’.  A node is ‘Full Node’ if both left and right children are not empty (or not NULL).
The approach is to do a level order traversal starting from root.  In the traversal, once a node is found which is NOT a Full Node, all the following nodes must be leaf nodes.
Also, one more thing needs to be checked to handle the below case: If a node has empty left child, then the right child must be empty. Thanks to Guddu Sharma for suggesting this simple and efficient approach. Output:
NOT Complete Binary Tree
Time Complexity: O(n) where n is the number of nodes in given Binary TreeAuxiliary Space: O(n) for queue.Please write comments if you find any of the above codes/algorithms incorrect, or find other ways to solve the same problem.