The diameter of a tree (sometimes called the width) is the number of nodes on the longest path between two leaves in the tree.  The diagram below shows two trees each with diameter nine, the leaves that form the ends of a longest path are shaded (note that there is more than one path in each tree of length nine, but no path longer than nine nodes). The diameter of a tree T is the largest of the following quantities:* the diameter of T’s left subtree
* the diameter of T’s right subtree
* the longest path between leaves that goes through the root of T (this can be computed from the heights of the subtrees of T) Implementation:Time Complexity: O(n^2)
Optimized implementation: The above implementation can be optimized by calculating the height in the same recursion rather than calling a height() separately. Thanks to Amar  for suggesting this optimized version. This optimization reduces time complexity to O(n).Time Complexity: O(n)References:
http://www.cs.duke.edu/courses/spring00/cps100/assign/trees/diameter.htmlPlease write comments if you find any of the above codes/algorithms incorrect, or find other ways to solve the same problem.Inorder  traversal of a Binary tree is either be done using recursion or with the use of a auxiliary stack.  The idea of threaded binary trees is to make inorder traversal faster and do it without stack and without recursion. A binary tree is made threaded by making all right child pointers that would normally be NULL point to the inorder successor of the node (if it exists).  There are two types of threaded binary trees.
Single Threaded:  Where a NULL right pointers is made to point to the inorder successor (if successor exists)Double Threaded:  Where both left and right NULL pointers are made to point to inorder predecessor and inorder successor respectively.  The predecessor threads are useful for reverse inorder traversal and postorder traversal.The threads are also useful for fast accessing ancestors of a node.Following diagram shows an example Single Threaded Binary Tree. The dotted lines represent threads.
C representation of a Threaded Node
Following is C representation of a single threaded node.Since right pointer is used for two purposes, the boolean variable rightThread is used to indicate whether right pointer points to right child or inorder successor. Similarly, we can add leftThread for a double threaded binary tree. Inorder Taversal using Threads
Following is C code for inorder traversal in a threaded binary tree.Following diagram demonstrates inorder order traversal using threads.We will soon be discussing insertion and deletion in threaded binary trees.Sources:
http://en.wikipedia.org/wiki/Threaded_binary_tree
www.cs.berkeley.edu/~kamil/teaching/su02/080802.ppt                    Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above