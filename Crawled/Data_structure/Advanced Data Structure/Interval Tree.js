It is recommended to refer following post as prerequisite of this post.Splay Tree | Set 1 (Search)As discussed in the previous post, Splay tree is a self-balancing data structure where the last accessed key is always at root. The insert operation is similar to Binary Search Tree insert with additional steps to make sure that the newly inserted key becomes the new root.Following are different cases to insert a key k in splay tree.1) Root is NULL:  We simply allocate a new node and return it as root.2) Splay the given key k. If k is already present, then it becomes the new root.  If not present, then last accessed leaf node becomes the new root.3) If new root’s key is same as k, don’t do anything as k is already present.4) Else allocate memory for new node and compare root’s key with k.
…….4.a) If k is smaller than root’s key, make root as right child of new node, copy left child of root as left child of new node and make left child of root as NULL.
…….4.b) If k is greater than root’s key, make root as left child of new node, copy right child of root as right child of new node and make right child of root as NULL.5) Return new node as new root of tree.Example:Output:
Preorder traversal of the modified Splay tree is
25 20 50 30 40 100 200
This article is compiled by Abhay Rathi. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed aboveTags: Advance Data Structures, Advanced Data Structures