Given an array of integers, find all combination of four elements in the array whose sum is equal to a given value X.
For example, if the given array is {10, 2, 3, 4, 5, 9, 7, 8} and X = 23, then your function should print “3 5 7 8″ (3 + 5 + 7 + 8 = 23).Sources: Find Specific Sum and Amazon Interview QuestionWe have discussed a O(n^3) algorithm in the previous post on this topic.  The problem can be solved in O(n^2Logn) time with the help of auxiliary space.  Thanks to itsnimish for suggesting this method. Following is the detailed process.Let the input array be A[].1) Create an auxiliary array aux[] and store sum of all possible pairs in aux[].  The size of aux[] will be n*(n-1)/2 where n is the size of A[].2) Sort the auxiliary array aux[].3) Now the problem reduces to find two elements in aux[] with sum equal to X. We can use  method 1 of this post to find the two elements efficiently.  There is following important point to note though. An element of aux[] represents a pair from A[]. While picking two elements from aux[], we must check whether the two elements have an element of A[] in common.  For example, if first element sum of A[1] and A[2], and second element is sum of A[2] and A[4], then these two elements of aux[] don’t represent four distinct elements of input array A[].Following is C implementation of this method.Output:
20, 1, 30, 40
Please note that the above code prints only one quadruple.  If we remove the return statement and add statements “i++; j–;”, then it prints same quadruple five times.  The code can modified to print all quadruples only once. It has been kept this way to keep it simple. Time complexity: The step 1 takes O(n^2) time.  The second step is sorting an array of size O(n^2). Sorting can be done in O(n^2Logn) time using merge sort or heap sort or any other O(nLogn) algorithm.  The third step takes O(n^2) time. So overall complexity is O(n^2Logn).Auxiliary Space: O(n^2). The big size of auxiliary array can be a concern in this method.Please write comments if you find any of the above codes/algorithms incorrect, or find other ways to solve the same problem.