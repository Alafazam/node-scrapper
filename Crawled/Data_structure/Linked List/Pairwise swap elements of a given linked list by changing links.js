Given a Singly Linked List, write a function to delete a given node. Your function must follow following constraints:
1) It must accept pointer to the start node as first parameter and node to be deleted as second parameter i.e., pointer to head node is not global.
2) It should not return pointer to the head node.
3) It should not accept pointer to pointer to head node.You may assume that the Linked List never becomes empty.Let the function name be deleteNode().  In a straightforward implementation, the function needs to modify head pointer when the node to be deleted is first node. As discussed in previous post, when a function modifies the head pointer, the function must use one of the given approaches, we canâ€™t use any of those approaches here. Solution
We explicitly handle the case when node to be deleted is first node, we copy the data of next node to head and delete the next node.  The cases when deleted node is not the head node can be handled normally by finding the previous node and changing next of previous node. Following is C implementation.Output:Please write comments if you find the above codes/algorithms incorrect, or find other ways to solve the same problem.