Given a singly linked list, rotate the linked list counter-clockwise by k nodes. Where k is a given positive integer. For example, if the given linked list is 10->20->30->40->50->60 and k is 4, the list should be modified to 50->60->10->20->30->40. Assume that k is smaller than the count of nodes in linked list.To rotate the linked list, we need to change next of kth node to NULL, next of last node to previous head node, and finally change head to (k+1)th node.  So we need to get hold of three nodes: kth node, (k+1)th node and last node.
Traverse the list from beginning and stop at kth node. Store pointer to kth node. We can get (k+1)th node using kthNode->next. Keep traversing till end and store pointer to last node also.  Finally, change pointers as stated above.Output:
Given linked list
10  20  30  40  50  60
Rotated Linked list
50  60  10  20  30  40
Time Complexity: O(n) where n is the number of nodes in Linked List. The code traverses the linked list only once.Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.We have discussed singly and doubly linked lists in the following posts.Introduction to Linked List  & Insertion
Doubly Linked List Introduction and InsertionCircular linked list is a linked list where all nodes are connected to form a circle.  There is no NULL at the end.  A circular linked list can be a singly circular linked list or doubly circular linked list.Advantages of Circular Linked Lists:
1) Any node can be a starting point.  We can traverse the whole list by starting from any point.  We just need to stop when the first visited node is visited again.2)  Useful for implementation of queue. Unlike this implementation, we donâ€™t need to maintain two pointers for front and rear if we use circular linked list.  We can maintain a pointer to the last inserted node and front can always be obtained as next of last.3) Circular lists are useful in applications to repeatedly go around the list. For example, when multiple applications are running on a PC, it is common for the operating system to put the running applications on a list and then to cycle through them, giving each of them a slice of time to execute, and then making them wait while the CPU is given to another application. It is convenient for the operating system to use a circular list so that when it reaches the end of the list it can cycle around to the front of the list. (Source http://web.eecs.utk.edu/~bvz/cs140/notes/Dllists/)4) Circular Doubly Linked Lists are used for implementation of advanced data structures like Fibonacci Heap.  We will soon be discussing implementation of insert delete operations for circular linked lists.Please write comments if you find any bug in above code/algorithm, or find other ways to solve the same problem