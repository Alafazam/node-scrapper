Given a Singly Linked List, starting from the second node delete all alternate nodes of it.  For example, if the given linked list is 1->2->3->4->5 then your function should convert it to 1->3->5, and if the given linked list is 1->2->3->4 then convert it to 1->3.Method 1 (Iterative)
Keep track of previous of the node to be deleted.  First change the next link of previous node and then free the memory allocated for the node.Time Complexity: O(n) where n is the number of nodes in the given Linked List.Method 2 (Recursive)
Recursive code uses the same approach as method 1.  The recursive coed is simple and short, but causes O(n) recursive function calls for a linked list of size n. Time Complexity: O(n)Please write comments if you find the above code/algorithm incorrect, or find better ways to solve the same problem.