Given a singly linked list, write a function to swap elements pairwise. For example, if the linked list is 1->2->3->4->5->6->7 then the function should change it to 2->1->4->3->6->5->7, and if the linked list is 1->2->3->4->5->6 then the function should change it to 2->1->4->3->6->5This problem has been discussed here. The solution provided there swaps data of nodes. If data contains many fields, there will be many swap operations. So changing links is a better idea in general.  Following is a C implementation that changes links instead of swapping data.Output:

 Linked list before calling  pairWiseSwap() 1 2 3 4 5 6 7
 Linked list after calling  pairWiseSwap() 2 1 4 3 6 5 7 
Time Complexity: Time complexity of the above program is O(n) where n is the number of nodes in a given linked list.  The while loop does a traversal of the given linked list.Following is recursive implementation of the same approach.  We change first two nodes and recur for the remaining list.  Thanks to geek and omer salem for suggesting this method.This article is contributed by Gautam Kumar. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed aboveTags: Linked Lists